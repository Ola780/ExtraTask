// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZadanieDodatkowe.Data;

#nullable disable

namespace ZadanieDodatkowe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621103157_EventParticipant fixed")]
    partial class EventParticipantfixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZadanieDodatkowe.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaxNumberParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nauka o kosmosie",
                            MaxNumberParticipants = 3,
                            Title = "Konf. kosmiczna"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2026, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sztuczna inteligencja",
                            MaxNumberParticipants = 10,
                            Title = "Warsztat AI"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2026, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nowe terapie",
                            MaxNumberParticipants = 10,
                            Title = "Konf. bioTech"
                        });
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.EventParticipant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .HasColumnType("int")
                        .HasColumnName("Participant_Id");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("Event_Id");

                    b.HasKey("ParticipantId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Event_Participant");

                    b.HasData(
                        new
                        {
                            ParticipantId = 1,
                            EventId = 1
                        },
                        new
                        {
                            ParticipantId = 2,
                            EventId = 1
                        },
                        new
                        {
                            ParticipantId = 3,
                            EventId = 2
                        },
                        new
                        {
                            ParticipantId = 4,
                            EventId = 3
                        });
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.EventSpeaker", b =>
                {
                    b.Property<int>("SpeakerId")
                        .HasColumnType("int")
                        .HasColumnName("Speaker_Id");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("Event_Id");

                    b.HasKey("SpeakerId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Event_Speaker");

                    b.HasData(
                        new
                        {
                            SpeakerId = 1,
                            EventId = 1
                        },
                        new
                        {
                            SpeakerId = 2,
                            EventId = 1
                        },
                        new
                        {
                            SpeakerId = 3,
                            EventId = 2
                        },
                        new
                        {
                            SpeakerId = 4,
                            EventId = 3
                        });
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Participant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Magda",
                            Surname = "Baczynska"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maks",
                            Surname = "Mazur"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Czarek",
                            Surname = "Krolikowski"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jan",
                            Surname = "Sosna"
                        });
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Speaker");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice",
                            Surname = "Bobrowska"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mark",
                            Surname = "Malinowski"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charles",
                            Surname = "Krolik"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bob",
                            Surname = "Kopulski"
                        });
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.EventParticipant", b =>
                {
                    b.HasOne("ZadanieDodatkowe.Models.Event", "Event")
                        .WithMany("EventParticipants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadanieDodatkowe.Models.Participant", "Participant")
                        .WithMany("EventParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.EventSpeaker", b =>
                {
                    b.HasOne("ZadanieDodatkowe.Models.Event", "Event")
                        .WithMany("EventSpeakers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadanieDodatkowe.Models.Speaker", "Speaker")
                        .WithMany("EventSpeakers")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.Event", b =>
                {
                    b.Navigation("EventParticipants");

                    b.Navigation("EventSpeakers");
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.Participant", b =>
                {
                    b.Navigation("EventParticipants");
                });

            modelBuilder.Entity("ZadanieDodatkowe.Models.Speaker", b =>
                {
                    b.Navigation("EventSpeakers");
                });
#pragma warning restore 612, 618
        }
    }
}
